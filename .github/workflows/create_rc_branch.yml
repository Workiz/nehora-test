name: Create rc branch
on:
  workflow_dispatch:

env: 
  BACKEND_BRANCH: ${{ github.ref_name }}
  GCP_REGION: us-central1
  GCP_ZONE: us-central1-b
  GKE_CORE_PROJECT: ${{ secrets.GKE_PROJECT_CORE }}

jobs:
  create-rc-branch:
    outputs: 
      BACKEND_BRANCH: ${{ steps.create-rc-branch.outputs.BACKEND_BRANCH }}
    name: create-rc-branch
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: create rc branch
      id: create-rc-branch
      if: ${{ github.ref_name }} == "workiz.com"
      run: | 
        echo ${{env.BACKEND_BRANCH}}
        git config --global --add safe.directory /github/workspace
        git fetch --tags
        last_tag=$(git tag | sort -V | grep -i "^v[0-9]\.[0-9]*$" | tail -1)  
        last_tag="${last_tag:1}"
        echo "$last_tag"
        IFS='.' read -ra tag_parts <<< "$last_tag"
        part2=`expr ${tag_parts[1]} + 5`
        new_tag="${tag_parts[0]}.$part2"
        echo "new tag $new_tag"
        BACKEND_BRANCH="rc$new_tag-branch"
        echo "BACKEND_BRANCH $BACKEND_BRANCH"
        # git checkout -b "$BACKEND_BRANCH"
        # git pull origin workiz.com
        # git push --set-upstream origin "$BACKEND_BRANCH" 
        echo "::set-output name=BACKEND_BRANCH::$BACKEND_BRANCH"

        workiz_actions_commit_sha=$(curl -X GET "https://api.github.com/repos/Workiz/workiz-actions/commits?per_page=1"  -H "Accept: application/vnd.github+json"    -H "Authorization: token $GITHUB_TOKEN" | jq -c '.[]'| jq '.sha')
        echo "workiz_actions_commit_sha $workiz_actions_commit_sha"

        workiz_actions_commit_sha="${workiz_actions_commit_sha%\"}"
        workiz_actions_commit_sha="${workiz_actions_commit_sha#\"}"
        echo "workiz_actions_commit_sha $workiz_actions_commit_sha"

        git_refs_response=$(
        curl -s -X POST https://api.github.com/repos/Workiz/workiz-actions/git/refs \
        -H "Authorization: token $GITHUB_TOKEN" \
        -d @- << EOF

        {
        "ref": "refs/heads/$BACKEND_BRANCH",
        "sha": "$workiz_actions_commit_sha"
        }
        EOF
        )

        git_ref_posted=$( echo "${git_refs_response}" | jq .ref | tr -d '"' )

        echo "::debug::${git_refs_response}"
        if [ "${git_ref_posted}" = "refs/heads/${BACKEND_BRANCH}" ]; then
        exit 0
        else
        echo "::error::Branch was not created properly."
        exit 1
        fi
     
  build-rc-env:
    needs: [create-rc-branch]
    name: build-rc-env
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.ALTER_SA_GITHUB_ACTIONS_JSON_KEY }}
  
    - name: Create new environment
      if: success()
      run: | 
        echo ${{needs.create-rc-branch.outputs.BACKEND_BRANCH}}
        # gcloud compute ssh root@sajdev-rc  --zone=${GCP_ZONE} --command "sudo bash /var/infra/scripts/new_staging_env/create_new_env.sh 'null' '${{needs.create-rc-branch.outputs.BACKEND_BRANCH}}' '${{needs.create-rc-branch.outputs.BACKEND_BRANCH}}' 'false' 'true' " --project=$GKE_CORE_PROJECT
