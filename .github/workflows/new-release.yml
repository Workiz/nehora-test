# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: New full release to production with frontend.

on:
  workflow_dispatch:
    
  # release:
  #   types: [created]
  # repository_dispatch:
  #   types: [rollback]
# Environment variables available to all jobs and steps in this workflow
env:
  GKE_CORE_PROJECT: ${{ secrets.GKE_PROJECT_CORE }}
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  AMPLITUDE_API_KEY: ${{ secrets.AMPLITUDE_API_KEY }}
  AMPLITUDE_SECRET_KEY: ${{ secrets.AMPLITUDE_SECRET_KEY }}
  GCP_REGION: us-central1
  GCP_ZONE: us-central1-b
  MAILGUNKEY: ${{ github.MAILGUNKEY}}
  TEMPLATE: backend-
  MIG:  preprod-ig
  URL_MAP_NAME: backend-preprod-lb
  BUCKET_PRE_PATH:  static-cdn.workiz.com/fe/pre/latest
  BUCKET_PATH:  static-cdn.workiz.com/fe/latest
  BUCKET_ROLLBACK_PATH:  static-cdn.workiz.com/fe/older
  GITHUB_SHA: ${{ github.sha }}
  API_PATH_MATCHER: path-matcher-7
  APP_PATH_MATCHER: path-matcher-3
  PREPROD_PATH_MATCHER: path-matcher-6
  FIRST_GROUP: preprod-ig
  SECOND_GROUP: preprod2-ig
  MAX_RPS: 100
  WORKIZ_INTERNAL_BE: workiz-interal-all-https
  LONG_PROCESS_BE: long-proccess-api
  AUTOSCALE_CPU: 0.35
  COOL_DOWN_SECS: 120
  MAX_REPLICAS: 20
  MIN_REPLICAS: 1
  PROD_DEFAULT_MIN_REPLICAS: 3
  PROD_BE_BUCKET: be-assets-1
  PREPROD_BE_BUCKET: be-assets-2

jobs:

  check-github-actor:
    name: check github actor
    runs-on: ubuntu-latest
    steps:
    # - name: Checkout
    #   uses: actions/checkout@v3
    - name: Checkout shared actions
      uses: actions/checkout@v3
      with:
        repository: Workiz/workiz-actions
        ref: workiz.com
        token: ${{ secrets.GH_TOKEN_MARKIZ_BOT }}
        path: ./tmp/workiz-actions
    - name: check github actor 
      uses: ./tmp/workiz-actions/check-github-actor
      with:
        GITHUB_ACTOR: ${{ github.actor }}

  create-release-branch-and-rc-env:
    needs: [check-github-actor]
    name: create frontend and backend branches 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout frontend
      uses: actions/checkout@v3
      with:
        repository: Workiz/frontend
        ref: workiz.com
        token: ${{ secrets.GH_TOKEN_REPOS }}
        path: ./tmp/frontend
    - name: Checkout shared actions
      uses: actions/checkout@v3
      with:
        repository: Workiz/workiz-actions
        ref: workiz.com
        token: ${{ secrets.GH_TOKEN_REPOS }}
        path: ./tmp/workiz-actions
    - name: create branches 
      uses: ./tmp/workiz-actions/create-rc-branch
      with:
        GITHUB_ACTOR: ${{ github.actor }}

  db-migrate:
    needs: [create-release-branch-and-rc-env]
    name: db migrate RC MySQL
    runs-on: backend-runner
    steps:
      - run: echo "db"
      # - uses: actions/checkout@v3
      # - name: Checkout shared actions
      #   uses: actions/checkout@v3
      #   with:
      #     repository: Workiz/workiz-actions
      #     ref: workiz.com
      #     token: ${{ secrets.GH_TOKEN_MARKIZ_BOT }}
      #     path: ./tmp/workiz-actions
      # - name: Checkout shared actions
      #   uses: actions/checkout@v3
      #   with:
      #     repository: Workiz/workiz-actions
      #     ref: workiz.com
      #     token: ${{ secrets.GH_TOKEN_MARKIZ_BOT }}
      #     path: ./tmp/workiz-actions
      # - name: Run flyway migrate
      #   uses: ./tmp/workiz-actions/flyway
      #   with:
      #     url: "jdbc:mysql://${{ env.MYSQL_HOST }}:3306/sendajobprod"
      #     user: ${{ env.MYSQL_USER }}
      #     password: ${{ env.MYSQL_PW }}
      #     locations: filesystem:./conf/db_migrations/sql
      #     command: migrate
      # - name: Send failure slack msg 
      #   if: failure()  
      #   uses: ./tmp/workiz-actions/slack-msg
      #   with:
      #     CHANNEL: 'release-committee'
      #     MESSAGE: 'db migrate on rc database failed :sob:'
      #     SUCCESS: false
      #     WORKIZ_INFRA_AUTH: ${{ secrets.WORKIZ_INFRA_AUTH }}
      #     LINKS: '[{"name" :"github-action","link": "https://github.com/Workiz/backend/actions/runs/${{github.run_id}}"}]' 

  create-rc:
    needs: [create-release-branch-and-rc-env]
    name: create RC from tag.
    runs-on: ubuntu-latest
    steps:
      - run: echo " $BRANCH {{ env.BRANCH }} "
    # - name: Checkout
    #   uses: actions/checkout@v3
    # - name: Checkout shared actions
    #   uses: actions/checkout@v3
    #   with:
    #     repository: Workiz/workiz-actions
    #     ref: workiz.com
    #     token: ${{ secrets.GH_TOKEN_MARKIZ_BOT }}
    #     path: ./tmp/workiz-actions
    # - uses: google-github-actions/auth@v0
    #   with:
    #     credentials_json: ${{ secrets.ALTER_SA_GITHUB_ACTIONS_JSON_KEY }}
    # - name: Create new environment
    #   if: success()
    #   run: | 
    #     if [ -z "${MANUAL_TAG}" ]; then
    #       MANUAL_TAG=${GITHUB_REF##*/}
    #       echo "MANUAL_TAG=$MANUAL_TAG" >> $GITHUB_ENV
    #     fi
    #     gcloud compute ssh root@sajdev-rc  --zone=${GCP_ZONE} --command "sudo bash /var/infra/scripts/backend-rc/recreate_rc.sh '${MANUAL_TAG}'" --project=$GKE_CORE_PROJECT
    # - name: Send success slack msg 
    #   if: success() 
    #   uses: ./tmp/workiz-actions/slack-msg
    #   with:
    #     CHANNEL: 'release-committee'
    #     MESSAGE: 'RC got updated with ${{env.MANUAL_TAG}} :charmander_dancing:'
    #     SUCCESS: true
    #     WORKIZ_INFRA_AUTH: ${{ secrets.WORKIZ_INFRA_AUTH }}
    #     LINKS: '[{"name" :"github-action","link": "https://github.com/Workiz/backend/actions/runs/${{github.run_id}}"}]'
    # - name: Send failure slack msg 
    #   if: failure()  
    #   uses: ./tmp/workiz-actions/slack-msg
    #   with:
    #     CHANNEL: 'release-committee'
    #     MESSAGE: 'RC failed to update :sob:'
    #     SUCCESS: false
    #     WORKIZ_INFRA_AUTH: ${{ secrets.WORKIZ_INFRA_AUTH }}
    #     LINKS: '[{"name" :"github-action","link": "https://github.com/Workiz/backend/actions/runs/${{github.run_id}}"}]'   
  update-qa:
    name: update qa.workiz.com
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout shared actions
      uses: actions/checkout@v3
      with:
        repository: Workiz/workiz-actions
        ref: workiz.com
        token: ${{ secrets.GH_TOKEN_MARKIZ_BOT }}
        path: ./tmp/workiz-actions
    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.ALTER_SA_GITHUB_ACTIONS_JSON_KEY }}
    - name: Create new environment
      if: success()
      run: | 
        if [ -z "${MANUAL_TAG}" ]; then
          MANUAL_TAG=${GITHUB_REF##*/}
          echo "MANUAL_TAG=$MANUAL_TAG" >> $GITHUB_ENV
        fi
        gcloud compute ssh root@sajdev --zone=${GCP_ZONE} --command "sudo bash /var/infra/scripts/backend-rc/qa-tag-pull.sh '${MANUAL_TAG}'" --project=$GKE_CORE_PROJECT
    - name: Send success slack msg 
      if: success() 
      uses: ./tmp/workiz-actions/slack-msg
      with:
        CHANNEL: 'release-committee'
        MESSAGE: 'qa.workiz.com got updated with ${{env.MANUAL_TAG}} :charmander_dancing:'
        SUCCESS: true
        WORKIZ_INFRA_AUTH: ${{ secrets.WORKIZ_INFRA_AUTH }}
        LINKS: '[{"name" :"github-action","link": "https://github.com/Workiz/backend/actions/runs/${{github.run_id}}"}]'
    - name: Send failure slack msg 
      if: failure()  
      uses: ./tmp/workiz-actions/slack-msg
      with:
        CHANNEL: 'release-committee'
        MESSAGE: 'qa.workiz.com failed to update :sob:'
        SUCCESS: false
        WORKIZ_INFRA_AUTH: ${{ secrets.WORKIZ_INFRA_AUTH }}
        LINKS: '[{"name" :"github-action","link": "https://github.com/Workiz/backend/actions/runs/${{github.run_id}}"}]'


