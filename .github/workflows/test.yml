name: ☁️ TEST

on:
  workflow_dispatch:

env:
  PROJECT_ID: workiz-development
  GKE_CLUSTER: staging
  GKE_ZONE: us-central1	
  REPO_NAME: workiz-helm-repo-dev


jobs:
  create-staging-env:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/791610978826/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider
          service_account: github-actions-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            GH_READONLY_TOKEN:${{ env.PROJECT_ID }}/GH_READONLY_TOKEN
            AZURE_HELM_VERSION:${{ env.PROJECT_ID }}/AZURE_HELM_VERSION
            WORKIZ_INFRA_AUTH:${{ env.PROJECT_ID }}/WORKIZ_INFRA_AUTH
            MARKIZBOT_COMMENT_TOKEN:${{ env.PROJECT_ID }}/MARKIZBOT_COMMENT_TOKEN
      - uses: azure/setup-helm@v4.1.0
        with:
          version: ${{ steps.secrets.outputs.AZURE_HELM_VERSION}} 
      - name: 'create matrix for all services'
        id: matrix
        run: |
          EXCLUDE=("account" "ai-services-exp" "backend-php-pt" "elasticsearch-listener" "mongodb-listener" "socket-io" "ts-service" "infra-api" "infra-api-staging" "qb-desktop")
          EXCLUDE_JSON=$(printf '%s\n' "${EXCLUDE[@]}" | jq -R . | jq -s .)
          RELEASES_JSON=$(helm list --namespace staging -o json | jq -c --argjson exclude "$EXCLUDE_JSON" '[.[] | select(.name as $name | $exclude | index($name) | not) | .name]')
          echo "matrix={\"services\":$RELEASES_JSON}"
          echo "matrix={\"services\":$RELEASES_JSON}" >> $GITHUB_OUTPUT
  deploy-service:
    needs: create-staging-env
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      matrix: ${{fromJson(needs.create-staging-env.outputs.matrix)}}
      fail-fast: false
      max-parallel: 40
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/791610978826/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider
          service_account: github-actions-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            GH_READONLY_TOKEN:${{ env.PROJECT_ID }}/GH_READONLY_TOKEN
            AZURE_HELM_VERSION:${{ env.PROJECT_ID }}/AZURE_HELM_VERSION
            WORKIZ_INFRA_AUTH:${{ env.PROJECT_ID }}/WORKIZ_INFRA_AUTH
            MARKIZBOT_COMMENT_TOKEN:${{ env.PROJECT_ID }}/MARKIZBOT_COMMENT_TOKEN
      - uses: azure/setup-helm@v4.1.0
        with:
          version: ${{ steps.secrets.outputs.AZURE_HELM_VERSION}} 
      - name: 'Deploy service'
        run: |
          helm plugin install https://github.com/hayorov/helm-gcs.git --version 0.4.1
          helm repo add ${{ env.REPO_NAME }} gs://${{ env.REPO_NAME }}
          helm repo update
          echo "Deploying service ${{ matrix.services }}"
          IMAGE=$(helm get values ${{ matrix.services }} --namespace staging | grep 'tag:' | awk '{print $2}')
          STAGING_NAMESPACE="staging"
          TARGET_NAMESPACE="nehora"
          CHART_REPO="workiz-helm-repo-dev/workiz-chart"
          SECRET_PROJECT_ID="workiz-development"
          TIMEOUT="300s"
          echo "Image: $IMAGE"
          echo "Deploying ${{ matrix.services }}"
          helm upgrade ${{ matrix.services }} $CHART_REPO --namespace $ --set secretProjectId=$SECRET_PROJECT_ID --reuse-values --atomic --timeout $TIMEOUT --devel --install --debug \
          --set secretProjectId=workiz-development \
          --set gcpProjectId=workiz-development \
          --set secretProjectId=workiz-development \
          --set image.registry="gcr.io/workiz-development" \
          --set image.tag=$IMAGE \
          --set customNodeEnv=staging 
      
    